basePath: /api
definitions:
  controllers.CreateArticleRequest:
    properties:
      content:
        example: 文章内容
        type: string
      tags:
        example:
        - '["标签1"'
        - '"标签2"]'
        items:
          type: string
        type: array
      title:
        example: 文章标题
        type: string
    required:
    - content
    - title
    type: object
  controllers.CreateCommentRequest:
    properties:
      content:
        example: 评论内容
        type: string
      parent_id:
        example: 1
        type: integer
    required:
    - content
    type: object
  controllers.FollowRequest:
    properties:
      action:
        description: '1: 关注, 0: 取消关注'
        type: integer
      user_id:
        description: 要关注/取消关注的用户ID
        type: integer
    required:
    - action
    - user_id
    type: object
  controllers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    required:
    - email
    - nickname
    - password
    - phone
    - username
    type: object
  controllers.UpdateArticleRequest:
    properties:
      content:
        example: 更新后的内容
        type: string
      tags:
        example:
        - '["标签1"'
        - '"标签2"]'
        items:
          type: string
        type: array
      title:
        example: 更新后的标题
        type: string
    type: object
  controllers.WeChatLoginRequest:
    properties:
      code:
        description: 微信登录code
        type: string
      encryptedData:
        description: 加密数据（首次登录需要）
        type: string
      iv:
        description: 解密向量（首次登录需要）
        type: string
      phone:
        description: 明文手机号（备用）
        type: string
    required:
    - code
    type: object
  models.Article:
    description: 文章信息
    properties:
      author:
        allOf:
        - $ref: '#/definitions/models.User'
        description: 作者信息
      author_id:
        description: 作者ID
        type: integer
      comment_count:
        description: 评论数
        type: integer
      comments:
        description: 评论列表
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      content:
        description: 文章内容
        type: string
      created_at:
        type: string
      id:
        type: integer
      like_count:
        description: 点赞数
        type: integer
      likes:
        description: 点赞列表
        items:
          $ref: '#/definitions/models.Like'
        type: array
      tags:
        description: 文章标签
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      title:
        description: 文章标题
        type: string
      updated_at:
        type: string
    type: object
  models.Comment:
    description: 评论信息
    properties:
      article:
        allOf:
        - $ref: '#/definitions/models.Article'
        description: 评论文章
      article_id:
        description: 评论文章ID
        type: integer
      children:
        description: 子评论列表
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      content:
        description: 评论内容
        type: string
      created_at:
        type: string
      id:
        type: integer
      parent:
        allOf:
        - $ref: '#/definitions/models.Comment'
        description: 父评论
      parent_id:
        description: 父评论ID，用于实现树状结构
        type: integer
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: 评论用户
      user_id:
        description: 评论用户ID
        type: integer
    type: object
  models.Like:
    description: 点赞信息
    properties:
      article:
        allOf:
        - $ref: '#/definitions/models.Article'
        description: 被点赞文章
      article_id:
        description: 被点赞文章ID
        type: integer
      created_at:
        type: string
      id:
        type: integer
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: 点赞用户
      user_id:
        description: 点赞用户ID
        type: integer
    type: object
  models.Tag:
    description: 标签信息
    properties:
      articles:
        description: 关联的文章
        items:
          $ref: '#/definitions/models.Article'
        type: array
      created_at:
        type: string
      id:
        type: integer
      name:
        description: 标签名称
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    description: 用户信息
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      followers_count:
        description: 论坛社交相关字段
        type: integer
      following_count:
        type: integer
      gender:
        type: integer
      id:
        type: integer
      nickname:
        type: string
      open_id:
        description: 微信小程序相关字段
        type: string
      password:
        type: string
      phone:
        type: string
      posts_count:
        type: integer
      session_key:
        type: string
      union_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Greenbook社交博客平台API文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Greenbook API
  version: "1.0"
paths:
  /api/articles:
    get:
      description: 获取文章列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Article'
            type: array
      summary: 获取文章列表
      tags:
      - 文章管理
    post:
      consumes:
      - application/json
      description: 创建一篇新文章
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 文章信息
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: 创建文章
      tags:
      - 文章管理
  /api/articles/{id}:
    delete:
      description: 删除指定的文章
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 删除文章
      tags:
      - 文章管理
    get:
      description: 获取指定文章的详细信息
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: 获取文章详情
      tags:
      - 文章管理
    put:
      consumes:
      - application/json
      description: 更新指定文章的信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文章更新信息
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: 更新文章
      tags:
      - 文章管理
  /api/articles/{id}/comments:
    post:
      consumes:
      - application/json
      description: 为指定文章添加评论
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 评论信息
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
      summary: 评论文章
      tags:
      - 文章管理
  /api/articles/{id}/like:
    post:
      description: 为指定文章点赞或取消点赞
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 点赞文章
      tags:
      - 文章管理
  /api/follow:
    post:
      consumes:
      - application/json
      description: 关注或取消关注指定用户
      parameters:
      - description: 关注请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.FollowRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 未授权
          schema:
            additionalProperties: true
            type: object
      summary: 关注/取消关注用户
      tags:
      - 社交
  /api/follow/followers:
    get:
      consumes:
      - application/json
      description: 获取当前用户的粉丝列表
      produces:
      - application/json
      responses:
        "200":
          description: 粉丝列表
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: 未授权
          schema:
            additionalProperties: true
            type: object
      summary: 获取粉丝列表
      tags:
      - 社交
  /api/follow/following:
    get:
      consumes:
      - application/json
      description: 获取当前用户的关注列表
      produces:
      - application/json
      responses:
        "200":
          description: 关注列表
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: 未授权
          schema:
            additionalProperties: true
            type: object
      summary: 获取关注列表
      tags:
      - 社交
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定ID用户的公开信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户公开信息
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 用户不存在
          schema:
            additionalProperties: true
            type: object
      summary: 获取用户资料
      tags:
      - 用户
  /api/user/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 用户详细信息
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: 未授权
          schema:
            additionalProperties: true
            type: object
      summary: 获取当前用户信息
      tags:
      - 用户
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录接口
      parameters:
      - description: 登录参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户信息和token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 认证失败
          schema:
            additionalProperties: true
            type: object
      summary: 用户登录
      tags:
      - 认证
  /auth/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口
      parameters:
      - description: 注册参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户信息和token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
      summary: 用户注册
      tags:
      - 认证
  /auth/wechat/login:
    post:
      consumes:
      - application/json
      description: 微信用户登录/注册接口
      parameters:
      - description: 登录参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.WeChatLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户信息和token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
      summary: 微信登录
      tags:
      - 认证
schemes:
- http
- https
swagger: "2.0"
